
using Revise, ApproxOperator, BenchmarkTools, Printf, SparseArrays
include("importmshwave.jl")
elements,nodes = import_fem("./msh/test.msh")
n‚Çö = length(nodes)
n‚Çë = length(elements["Œ©"])

setùù≠!.(elements["Œ©"])
set‚àáùù≠!.(elements["Œ©"])
setùù≠!.(elements["Œì"])
setùù≠!.(elements["Œì·µó"])
E = 3e6
ŒΩ=0
C·µ¢·µ¢·µ¢·µ¢ = E/(1-ŒΩ^2)
C·µ¢·µ¢‚±º‚±º = E*ŒΩ/(1-ŒΩ^2)
C·µ¢‚±º·µ¢‚±º = E/2/(1+ŒΩ)
prescribe!(elements["Œì"],:g‚ÇÅ=>(x,y,z)->0.0)
prescribe!(elements["Œì"],:g‚ÇÇ=>(x,y,z)->0.0)
prescribe!(elements["Œì"],:n‚ÇÅ‚ÇÅ=>(x,y,z,n‚ÇÅ,n‚ÇÇ)->n‚ÇÅ*n‚ÇÅ)
prescribe!(elements["Œì"],:n‚ÇÅ‚ÇÇ=>(x,y,z,n‚ÇÅ,n‚ÇÇ)->n‚ÇÅ*n‚ÇÇ)
prescribe!(elements["Œì"],:n‚ÇÇ‚ÇÇ=>(x,y,z,n‚ÇÅ,n‚ÇÇ)->n‚ÇÇ*n‚ÇÇ)
prescribe!(elements["Œì·µó"],:t‚ÇÅ=>(x,y,z)->2.0)                 
prescribe!(elements["Œì·µó"],:t‚ÇÇ=>(x,y,z)->0.0)    
ops = [
    Operator{:‚à´‚à´Œµ·µ¢‚±ºœÉ·µ¢‚±ºdxdy}(:E=>E,:ŒΩ=>ŒΩ),
    Operator{:‚à´v·µ¢g·µ¢ds}(:Œ±=>1e13*E),
    Operator{:‚à´v·µ¢t·µ¢ds}(),
]

k = zeros(2*n‚Çö,2*n‚Çö)
f = zeros(2*n‚Çö)


ops[1](elements["Œ©"],k)
ops[2](elements["Œì"],k,f)
ops[3](elements["Œì·µó"],f)  


d=k\f

d‚ÇÅ = d[1:2:2*n‚Çö]
d‚ÇÇ = d[2:2:2*n‚Çö]    
 println("d‚ÇÅ = ", d‚ÇÅ)
 println("d‚ÇÇ = ", d‚ÇÇ)
  